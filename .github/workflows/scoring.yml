name: Scoring
on:
  workflow_run:
    workflows:
      - Request
    types:
      - completed
env:
  TZ: 'Asia/Tokyo'
  WSH_SCORING_DEBUG: '${{ secrets.WSH_SCORING_DEBUG }}'
jobs:
  payload:
    runs-on: ubuntu-20.04
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      result: ${{ steps.payload.outputs.result }}
    steps:
      - name: Download payload
        uses: dawidd6/action-download-artifact@v2.15.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: .github/workflows/request.yml
          run_id: ${{ github.event.workflow_run.id }}
          name: payload.json
          path: /tmp
      - name: Read payload
        uses: actions/github-script@v5.0.0
        id: payload
        with:
          result-encoding: json
          script: |
            const payload = require('/tmp/payload.json');
            return payload;
  vrt:
    runs-on: ubuntu-20.04
    needs:
      - payload
    outputs:
      details: ${{ steps.details.outputs.result }}
      result: ${{ steps.result.outputs.result }}
    concurrency: scoring-${{ fromJSON(needs.payload.outputs.result).id }}
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-node@v2.4.1
        with:
          node-version: '16'
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - run: yarn build
      - run: sudo apt-get install -y fonts-noto-cjk
      - name: Run VRT
        id: vrt
        run: |
          yarn run vrt:capture --url ${{ fromJSON(needs.payload.outputs.result).url }}
          yarn run vrt:detect
      - name: Upload payload
        uses: actions/upload-artifact@v2.2.4
        with:
          name: screenshots
          path: ./scripts/vrt/tmp/*
          retention-days: 1
      - name: Read details
        uses: actions/github-script@v5.0.0
        id: details
        with:
          result-encoding: json
          script: |
            const payload = require('./scripts/vrt/tmp/reg.json');
            return payload;
      - name: Read result
        uses: actions/github-script@v5.0.0
        id: result
        with:
          result-encoding: string
          script: |
            const payload = require('./scripts/vrt/tmp/reg.json');
            return payload.failedItems.length === 0 ? 'success' : 'failed';
  scoring:
    runs-on: ubuntu-20.04
    needs:
      - payload
      - vrt
    outputs:
      result: ${{ steps.scoring.outputs.export }}
    concurrency: scoring-${{ fromJSON(needs.payload.outputs.result).id }}
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-node@v2.4.1
        with:
          node-version: '16'
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - run: yarn build
      - run: sudo apt-get install -y fonts-noto-cjk
      - name: Scoring
        id: scoring
        run: |
          yarn run scoring \
            --id ${{ fromJSON(needs.payload.outputs.result).id }} \
            --url ${{ fromJSON(needs.payload.outputs.result).url }}
        env:
          WSH_SCORING_TARGET_PATHS: '${{ secrets.WSH_SCORING_TARGET_PATHS }}'
  comment-payload:
    runs-on: ubuntu-20.04
    needs:
      - payload
    steps:
      - name: Comment
        uses: peter-evans/create-or-update-comment@v1.4.5
        with:
          comment-id: ${{ fromJSON(needs.payload.outputs.result).report_comment_id }}
          edit-mode: replace
          body: |
            ## レギュレーションチェック

            :hourglass_flowing_sand: **VRT を実行しています**

            ---

            Actions: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
  comment-failure-vrt:
    runs-on: ubuntu-20.04
    needs:
      - payload
      - vrt
      - comment-payload
    if: always() && needs.vrt.result == 'failure'
    steps:
      - name: Comment
        uses: peter-evans/create-or-update-comment@v1.4.5
        with:
          comment-id: ${{ fromJSON(needs.payload.outputs.result).report_comment_id }}
          edit-mode: replace
          body: |
            ## レギュレーションチェック

            :exclamation: **VRT が実行できませんでした**

            次を確認してください

            - URL が間違っていませんか
            - API `POST /api/v1/initialize` が実行できますか
            - 計測対象のページは、誰でも閲覧できるようになっていますか
            - エラーページ以外では、ステータスコードが 200 で返却されますか

            ---

            Actions: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

            :information_source: `/rerun` （リラン / 再実行）とコメントすると、もう一度計測ができます
            :information_source: 登録内容を変更する場合は、issue を閉じて作り直してください
  comment-vrt:
    runs-on: ubuntu-20.04
    needs:
      - payload
      - vrt
      - comment-payload
    steps:
      - name: Comment
        uses: peter-evans/create-or-update-comment@v1.4.5
        with:
          comment-id: ${{ fromJSON(needs.payload.outputs.result).report_comment_id }}
          edit-mode: replace
          body: |
            ## レギュレーションチェック

            ${{ (needs.vrt.outputs.result == 'success' && '**差分はありませんでした**') || '**一部のページに差分があります**' }}

            <details>
            <summary>差分が見つかったページ</summary>

            :information_source: スクリーンショットは、スコア計測後に、Actions の Artifacts からダウンロードできます

            ```json
            ${{ toJSON(fromJSON(needs.vrt.outputs.details).failedItems) }}
            ```

            </details>

            ## スコア

            :hourglass_flowing_sand: **Lighthouse でスコアを計測しています**

            ---

            Actions: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
  comment-failure-scoring:
    runs-on: ubuntu-20.04
    needs:
      - payload
      - vrt
      - scoring
      - comment-vrt
    if: always() && needs.scoring.result == 'failure'
    steps:
      - name: Comment
        uses: peter-evans/create-or-update-comment@v1.4.5
        with:
          comment-id: ${{ fromJSON(needs.payload.outputs.result).report_comment_id }}
          edit-mode: replace
          body: |
            ## レギュレーションチェック

            ${{ (needs.vrt.outputs.result == 'success' && '**差分はありませんでした**') || '**一部のページに差分があります**' }}

            <details>
            <summary>差分が見つかったページ</summary>

            :information_source: スクリーンショットは、スコア計測後に、Actions の Artifacts からダウンロードできます

            ```json
            ${{ toJSON(fromJSON(needs.vrt.outputs.details).failedItems) }}
            ```

            </details>

            ## スコア

            :exclamation: **Lighthouse の計測ができませんでした**

            次を確認してください

            - URL が間違っていませんか
            - 計測対象のページは、誰でも閲覧できるようになっていますか
            - エラーページ以外では、ステータスコードが 200 で返却されますか

            ---

            Actions: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

            :information_source: `/rerun` （リラン / 再実行）とコメントすると、もう一度計測ができます
            :information_source: 登録内容を変更する場合は、issue を閉じて作り直してください
  comment-scoring:
    runs-on: ubuntu-20.04
    needs:
      - payload
      - vrt
      - scoring
      - comment-vrt
    steps:
      - name: Comment
        uses: peter-evans/create-or-update-comment@v1.4.5
        if: needs.vrt.outputs.result == 'success'
        with:
          comment-id: ${{ fromJSON(needs.payload.outputs.result).report_comment_id }}
          edit-mode: replace
          body: |
            ## レギュレーションチェック

            ${{ (needs.vrt.outputs.result == 'success' && '**差分はありませんでした**') || '**一部のページに差分があります**' }}

            <details>
            <summary>差分が見つかったページ</summary>

            :information_source: スクリーンショットは、スコア計測後に、Actions の Artifacts からダウンロードできます

            ```json
            ${{ toJSON(fromJSON(needs.vrt.outputs.details).failedItems) }}
            ```

            </details>

            ## スコア

            スコアは **${{ fromJSON(needs.scoring.outputs.result).result.score }}** です

            :warning: 競技期間を過ぎたため、リーダーボードには反映されません

            <details>
            <summary>buildInfo</summary>

            ```json
            ${{ toJSON(fromJSON(needs.scoring.outputs.result).buildInfo) }}
            ```

            </details>

            ---

            Actions: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

            :information_source: `/rerun` （リラン / 再実行）とコメントすると、もう一度計測ができます
            :information_source: 登録内容を変更する場合は、issue を閉じて作り直してください
